(in-package :dgw)

(flet ((%time-to-local-y (self time)
         (coerce (* time (.zoom-y self)) 'single-float)))

  (defmethod time-to-local-y ((self zoom-mixin) time)
    (%time-to-local-y self time))

  (defmethod time-to-world-y ((self zoom-mixin) time)
    (+ (%time-to-local-y self time) (.y (ig:get-window-pos)))))

(defmethod zoom-x-update ((self zoom-mixin) io)
  (when (and (/= .0 (c-ref io ig:im-gui-io :mouse-wheel))
             (ig:ensure-to-bool (c-ref io ig:im-gui-io :key-ctrl))
             (ig:ensure-to-bool (c-ref io ig:im-gui-io :key-alt)))
    (let* ((zoom-x-new (max (+ (.zoom-x self) (* (c-ref io ig:im-gui-io :mouse-wheel)
                                                 (.zoom-x-factor self)))
                            (.zoom-x-min self)))
           (zoom-ratio (/ zoom-x-new (.zoom-x self)))
           (scroll-x (ig:get-scroll-x))
           (mouse-x-in-window (- (.x (ig:get-mouse-pos)) (.x (ig:get-window-pos))
                                 (.offset-x self)))
           (scroll-x-new (+ (* (+ mouse-x-in-window scroll-x)
                               (- zoom-ratio 1.0))
                            scroll-x)))
      (setf (.zoom-x self) zoom-x-new)
      (ig:set-scroll-x-float scroll-x-new))))

(defmethod zoom-y-update ((self zoom-mixin) io)
  (when (and (/= .0 (c-ref io ig:im-gui-io :mouse-wheel))
             (ig:ensure-to-bool (c-ref io ig:im-gui-io :key-ctrl))
             (not (ig:ensure-to-bool (c-ref io ig:im-gui-io :key-alt))))
    (let* ((zoom-y-new (max (+ (.zoom-y self) (* (c-ref io ig:im-gui-io :mouse-wheel)
                                                 (.zoom-y-factor self)))
                            (.zoom-y-min self)))
           (zoom-ratio (/ zoom-y-new (.zoom-y self)))
           (scroll-y (ig:get-scroll-y))
           (mouse-y-in-window (- (.y (ig:get-mouse-pos))  (.y (ig:get-window-pos))
                                 (.offset-y self)))
           (scroll-y-new (+ (* (+ mouse-y-in-window scroll-y)
                               (- zoom-ratio 1.0))
                            scroll-y)))
      (setf (.zoom-y self) zoom-y-new)
      (ig:set-scroll-y-float scroll-y-new))))
